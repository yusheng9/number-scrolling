{"remainingRequest":"C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\src\\components\\HelloWorld.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\src\\components\\HelloWorld.vue","mtime":1680255439926},{"path":"C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\node_modules\\css-loader\\index.js","mtime":1680254600151},{"path":"C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1680254618523},{"path":"C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\node_modules\\postcss-loader\\src\\index.js","mtime":1680254620299},{"path":"C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680254608292},{"path":"C:\\Users\\admin\\Documents\\HBuilderProjects\\statistics-num\\node_modules\\vue-loader\\lib\\index.js","mtime":1680254618511}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.statistics-num {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 130px;\n  background: #f3f3f3;\n}\n\n.num {\n  font-size: 80px;\n  font-weight: 600;\n  color: #000;\n  margin-right: 10px;\n  transition: 1s ease-out;\n}\n\n.sign {\n  font-size: 40px;\n  font-weight: 600;\n  color: #000;\n}\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"statistics-num\">\n    <!-- 显示当前数字，不使用逗号分隔符 -->\n    <span class=\"num\">{{ currentVal.toString() }}</span>\r\n\t <!-- 显示当前数字，用逗号分隔符 -->\r\n\t<!-- <span class=\"num\">{{ currentVal.toLocaleString() }}</span> -->\n    <!-- 显示加号 -->\n    <!-- <span class=\"sign\">+</span> -->\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 目标数字\n      endVal: 20000,\n      // 动画持续时间（单位：毫秒）\n      duration: 2000,\n      // 当前数字，初始值为0\n      currentVal: 0,\n      // 动画开始时间\n      startTime: null\n    }\n  },\n  mounted() {\n    // 在组件挂载后启动数字滚动效果\n    this.startCount()\n  },\n  methods: {\n    startCount() {\n      // 使用requestAnimationFrame()方法实现动画效果\n      window.requestAnimationFrame(timestamp => {\n        // 如果startTime属性为空，则将当前时间赋值给它\n        if (!this.startTime) this.startTime = timestamp\n        // 计算当前时间与动画开始时间之间的时间差，以及时间差所占总时间的百分比\n        const progress = timestamp - this.startTime\n        const percentage = Math.min(progress / this.duration, 1)\n        // 根据时间百分比计算当前数字，并将其赋值给currentVal属性\n        this.currentVal = Math.floor(percentage * (this.endVal - 0) + 0)\n        // 如果动画持续时间还没有达到，则继续循环调用startCount()方法\n        if (progress < this.duration) {\n          this.startCount()\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style>\n.statistics-num {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 130px;\n  background: #f3f3f3;\n}\n\n.num {\n  font-size: 80px;\n  font-weight: 600;\n  color: #000;\n  margin-right: 10px;\n  transition: 1s ease-out;\n}\n\n.sign {\n  font-size: 40px;\n  font-weight: 600;\n  color: #000;\n}\n</style>\n\r\n\r\n"]}]}